{
  // Controls the font size in pixels.
  "editor.fontSize": 14,

  // Controls the font family.
  "editor.fontFamily": "'FuraCode Nerd Font', 'Courier New', monospace",

  // Controls how the editor should render whitespace characters, possibilities are 'none', 'boundary', and 'all'. The 'boundary' option does not render single spaces between words.
  "editor.renderWhitespace": "all",

  // Controls the cursor style, accepted values are 'block', 'block-outline', 'line', 'line-thin', 'underline' and 'underline-thin'
  "editor.cursorStyle": "line",

  // Insert spaces when pressing Tab. This setting is overriden based on the file contents when `editor.detectIndentation` is on.
  "editor.insertSpaces": false,

  // Controls how lines should wrap. Can be:
  //  - 'off' (disable wrapping),
  //  - 'on' (viewport wrapping),
  //  - 'wordWrapColumn' (wrap at `editor.wordWrapColumn`) or
  //  - 'bounded' (wrap at minimum of viewport and `editor.wordWrapColumn`).
  "editor.wordWrap": "bounded",

  // Controls if the editor will scroll beyond the last line
  "editor.scrollBeyondLastLine": false,

  // Render the actual characters on a line (as opposed to color blocks)
  "editor.minimap.renderCharacters": false,

  // Controls if Find in Selection flag is turned on when multiple characters or lines of text are selected in the editor
  "editor.find.autoFindInSelection": true,

  // Controls the wrapping column of the editor when `editor.wordWrap` is 'wordWrapColumn' or 'bounded'.
  "editor.wordWrapColumn": 120,

  // Controls if the editor should automatically format the line after typing
  "editor.formatOnType": true,

  // Controls if the editor should automatically format the pasted content. A formatter must be available and the formatter should be able to format a range in a document.
  "editor.formatOnPaste": true,

  // Control the cursor animation style, possible values are 'blink', 'smooth', 'phase', 'expand' and 'solid'
  "editor.cursorBlinking": "phase",

  // Enables font ligatures
  "editor.fontLigatures": true,

  // Controls whether the editor should render control characters
  "editor.renderControlCharacters": true,

  // Controls how the editor should render the current line highlight, possibilities are 'none', 'gutter', 'line', and 'all'.
  "editor.renderLineHighlight": "all",

  // Controls if a window should restore to full screen mode if it was exited in full screen mode.
  "window.restoreFullscreen": true,

  // Configure glob patterns for excluding files and folders. For example, the files explorer decides which files and folders to show or hide based on this setting.
  "files.exclude": {
    "**/.git": true,
    "**/.svn": true,
    "**/.hg": true,
    "**/CVS": true,
    "**/.DS_Store": true
  },

  // When enabled, will trim trailing whitespace when saving a file.
  "files.trimTrailingWhitespace": true,

  // When enabled, insert a final new line at the end of the file when saving it.
  "files.insertFinalNewline": true,

  // When enabled, will trim all new lines after the final new line at the end of the file when saving it.
  "files.trimFinalNewlines": true,

  // Customizes which terminal application to run on OS X.
  "terminal.external.osxExec": "iTerm.app",

  // Specifies the color theme used in the workbench.
  "workbench.colorTheme": "Solarized Dark",

  // Insert snippets when their prefix matches. Works best when 'quickSuggestions' aren't enabled.
    "editor.tabCompletion": "on",
    "php-cs-fixer.executablePath": "${extensionPath}/php-cs-fixer.phar",
    "php-cs-fixer.lastDownload": 1592332608430,

  // Execute PHP CS Fixer on save
  "php-cs-fixer.onsave": true,
  "vim.disableExtension": false,
  "workbench.activityBar.visible": true,
  "git.autofetch": true,
  "javascript.updateImportsOnFileMove.enabled": "always",

  // Object with environment variables that will be added to the VS Code process to be used by the terminal on macOS. Set to `null` to delete the environment variable.
  "terminal.integrated.env.osx": {
    "XDEBUG_CONFIG": "idekey=VSCODE",
    "COMPOSER_ALLOW_XDEBUG": "1"
  },

  // Coverage file names for the extension to automatically look for
  "coverage-gutters.coverageFileNames": [
    "coverage.xml"
  ],

  // Configure the connection(s) to SonarQube/SonarCloud in your USER settings.
  // For security reasons, the token should not be stored in SCM with workspace settings
  // "sonarlint.connectedMode.servers": [
  //     {
  //        "serverId": "my_orga_in_sonarcloud.io", // Connection identifier
  //        "serverUrl": "https://sonarcloud.io",   // SonarQube/SonarCloud URL - https//sonarcloud.io for SonarCloud
  //        "organizationKey": "my_organization",   // Organization key in SonarCloud only
  //        "token": "V2VkIE1heSAyMyAwODowOTozMiBDRVNUIDIwMTgK"    // User token - generated in SonarQube/SonarCloud in My Account>Security
  //     }
  // ],
  "sonarlint.connectedMode.servers": [
    {
      "serverId": "Mutual of Omaha",
      "serverUrl": "http://sonarqube.mutualofomaha.com/",
      "token": "2b76cafc6049fcdd7713d1c11fc6a7e8b3f3e3c1"
    }
  ],
  "liveshare.featureSet": "insiders",
  "peacock.favoriteColors": [
    {
      "name": "Angular Red",
      "value": "#b52e31"
    },
    {
      "name": "Auth0 Orange",
      "value": "#eb5424"
    },
    {
      "name": "Azure Blue",
      "value": "#007fff"
    },
    {
      "name": "C# Purple",
      "value": "#68217A"
    },
    {
      "name": "Gatsby Purple",
      "value": "#639"
    },
    {
      "name": "Go Cyan",
      "value": "#5dc9e2"
    },
    {
      "name": "Java Blue-Gray",
      "value": "#557c9b"
    },
    {
      "name": "JavaScript Yellow",
      "value": "#f9e64f"
    },
    {
      "name": "Mandalorian Blue",
      "value": "#1857a4"
    },
    {
      "name": "Node Green",
      "value": "#215732"
    },
    {
      "name": "React Blue",
      "value": "#00b3e6"
    },
    {
      "name": "Something Different",
      "value": "#832561"
    },
    {
      "name": "Vue Green",
      "value": "#42b883"
    }
  ],
  "window.zoomLevel": 0,
  "terminal.integrated.shell.osx": "/bin/zsh",
  "python.pythonPath": "/usr/local/bin/python3",
  "editor.lineNumbers": "relative",
  "diffEditor.renderSideBySide": false,
}
